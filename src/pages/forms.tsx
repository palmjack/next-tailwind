import { useState } from 'react';
import type { FormEvent } from 'react';
import type { NextPage } from 'next';
import Head from 'next/head';
import { FormProvider, useForm } from 'react-hook-form';
import type { FieldValues, SubmitHandler } from 'react-hook-form';

import FormCheckbox from 'components/forms/FormCheckbox';
import FormFile from 'components/forms/FormFile';
import FormInput from 'components/forms/FormInput';
import FormRadio from 'components/forms/FormRadio';
import FormSelect from 'components/forms/FormSelect';
import FormTextarea from 'components/forms/FormTextarea';
import CustomButton from 'components/shared/customButton/CustomButton';

const selectOptions = [
  {
    value: 'one',
    label: 'Value one'
  },
  {
    value: 'two',
    label: 'Value two'
  }
];

const radioOptions = [
  {
    value: 'one',
    label: 'Value one'
  },
  {
    value: 'two',
    label: 'Value two'
  }
];

const Forms: NextPage = () => {
  const [submitData, setSubmitData] = useState<FieldValues>();
  const methods = useForm();
  const { handleSubmit, reset } = methods;

  const onSubmit: SubmitHandler<FieldValues> = (data) => {
    setSubmitData(data);
  };

  const onReset = (): void => reset();

  const customSubmitHandler = (e: FormEvent<HTMLFormElement>): Promise<void> =>
    handleSubmit(onSubmit)(e).catch(() => {});

  return (
    <>
      <Head>
        <title>Create Next App</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <section className="mx-auto xl:container">
        <h1>Forms</h1>
        <FormProvider {...methods}>
          <form onSubmit={customSubmitHandler}>
            <FormInput
              name="a"
              label="input a"
              type="text"
              placeholder="placeholder a"
              hint="Weâ€™ll never share your details."
              required
            />
            <FormInput name="b" label="input b" type="text" placeholder="placeholder b" />
            <FormTextarea name="c" label="input c" rows={4} placeholder="placeholder c" />
            <FormCheckbox name="d" label="checkbox d" />
            <FormRadio name="e" label="radio g" options={radioOptions} />
            <FormSelect name="f" label="select f" options={selectOptions} />
            <FormFile name="g" label="file g" />
            <CustomButton text="Submit" variant="primary" type="submit" />
            <CustomButton text="Reset" variant="outline" type="reset" onClick={onReset} />
          </form>
        </FormProvider>
        {!!submitData && <pre>{JSON.stringify(submitData, null, 2)}</pre>}
      </section>
    </>
  );
};

export default Forms;
